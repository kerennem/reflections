How did viewing a diff between two versions of a file help you see the bug that was introduced?

It helped me by downsizing the number of lines I had to search for the bug.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It could make me more efficient by making me less scared to make changes.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

The main pro is the flexibility. Every commit can represant a logical change. The main con is the possibility for human error. If a programmer forgets to commit for a long time, there is a risk of losing a lot of changes.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I think the reason is that different types of version control systems have different purposes. While Git is mainly for maintainimg coding projects (and then it makes sense to have changes in several files), Google Docs is used mainly for regular documents, and usualy every document stands for itself.

How can you use the commands git log and git diff to view the history of files?

git log allows me to view the commits. Meaningful commit notes help to understand the changes made. Then, using git diff, changes can be viewed.

How might using version control make you more confident to make changes that could break something?

It would make me less afraid to make mistakes, since it is much easier to fix mistakes using vc

Now that you have your workspace set up, what do you want to try using Git for?

For any large project I'm working on.


